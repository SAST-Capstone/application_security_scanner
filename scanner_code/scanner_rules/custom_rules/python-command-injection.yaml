rules:
- id: python-command-injection-taint
  languages: [python]
  message: |
    Potential command injection detected. Unsanitized input flows into a command execution function.
    Ensure input is properly sanitized.
  severity: ERROR
  mode: taint
  pattern-sources:
    - pattern: |
        $USER_INPUT = input(...)
    - pattern: |
        $USER_INPUT = $REQUEST.$DATA
  pattern-sinks:
    - pattern: |
        os.system($USER_INPUT)
    - pattern: |
        subprocess.call($USER_INPUT, ...)
    - pattern: |
        subprocess.run($USER_INPUT, ...)
    - pattern: |
        subprocess.Popen($USER_INPUT, ...)
    - pattern: |
        eval($USER_INPUT)
    - pattern: |
        exec($USER_INPUT)
  sanitizers:
    - pattern: |
        shlex.quote($USER_INPUT)
    - pattern: |
        $USER_INPUT.replace(...)
    - pattern-inside: |
        import re
        ...
      pattern: |
        re.escape($USER_INPUT)
  fix: Use safer alternatives and ensure to sanitize all user inputs
